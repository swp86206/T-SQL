@@NESTLEVEL  -- 判斷第幾層
===========================================

CREATE PROCEDURE proc3 
AS PRINT 'Proc3: at level ' + CAST(@@NESTLEVEL AS CHAR) 
GO 
CREATE PROCEDURE proc2 
AS PRINT 'Proc2 start: at level ' + CAST(@@NESTLEVEL AS CHAR) 
EXEC proc3						  --呼叫proc3 
PRINT 'Proc2 end: at level ' + CAST(@@NESTLEVEL AS CHAR) 
GO 
CREATE PROCEDURE proc1 
AS PRINT 'Proc1 start: at level ' + CAST(@@NESTLEVEL AS CHAR) 
EXEC proc2 					         -- 呼叫proc2
PRINT 'Proc1 end: at level ' + CAST(@@NESTLEVEL AS CHAR) 
GO 

EXEC proc1   -- 巢狀呼叫

GO 
=======================================

EXEC FLAG2.練習12.dbo.TestRPC  --執行另外資料庫

===================================================

TYPE  自行定義類型

CREATE TYPE IntTableType AS TABLE 
(名稱 VARCHAR(20), 數值 INT )
GO

============================================

CREATE SEQUENCE Seq123   -- 建立 Seq123 順序物件
START WITH 1          -- 由 1 開始給號
INCREMENT BY 1        -- 每次 +1

CREATE SEQUENCE Seq246   -- 建立 Seq246 順序物件
START WITH 2          -- 由 2 開始給號
INCREMENT BY 2        -- 每次 +2

SELECT NEXT VALUE FOR Seq123 AS 順序1,  -- 由 Seq123 取號 -- next value for 順序物件  從哪裡開始取號
       NEXT VALUE FOR Seq246 AS 順序2,  -- 由 Seq246 取號
	   產品名稱
FROM 旗旗公司

GO 

======================================================================

tinyint  -- 0 ~ 255

/****************   P15-27  ~  P15-40  **************************/  --都是重點 !

ALTER TABLE 大大公司
ADD DEFAULT NEXT VALUE FOR seq123 FOR 序號  --類似identity 可以從順序物件去取值 ,但identity 一個table 只能存在一個
  
INSERT 大大公司 (產品名稱, 價格)
VALUES ('SQL聖經', 780), ('精通SQL', 720)

SELECT * FROM  大大公司

GO 

======================================

CREATE FUNCTION 依售價查詢書籍
(@由 money, @到 money)
RETURNS TABLE 		-- 資料類型是table ,不能用 begin .... end
RETURN (SELECT 書籍編號, 書籍名稱, 單價
                FROM 書籍
               WHERE 單價 >=@由 AND 單價 <= @到)
GO

========================================

P15-14
=======================================
CREATE TRIGGER 檢查訂購數量更改 
ON 訂單T3
AFTER UPDATE 
AS 
IF (SELECT MAX(數量) FROM inserted) > 200  --加 MAX --> 要在其中尋找最大數值的資料行,可以單一值與單一值做比較

BEGIN 
   PRINT '數量更改不得大於 200！' 
   ROLLBACK
END 
GO
==================================================
訂單資料被更改訊息通知

CREATE TRIGGER 訂單異動郵寄通知
ON 訂單T4
AFTER INSERT, UPDATE, DELETE 
AS 
EXEC msdb.dbo.sp_send_dbmail
     @recipients = 'nchuho57@gmail.com',--'ken@flag.com.tw',
     @body = '訂單資料被更改了！',
     @subject = '資料庫異動通知'
==========================================================

一個資料表有多個 Trigger, 都會觸發,只可以自行決定第一個跟最後一個

sp_settriggerorder  

EXEC sp_settriggerorder '記錄薪資修改', 'First', 'UPDATE'


=============================================================================
-- 巢狀觸發程序
nested triggers 設定為 0 時，AFTER 觸發程序不能重疊顯示。 
nested triggers 設定為 1 (預設值) 時，AFTER 觸發程序最多可以重疊顯示 32 層。 


GO 
==========================================================================
*****
CREATE TRIGGER 處理新增的員工資料
ON 員工T2 
INSTEAD OF INSERT  -- INSTEAD OF --> 以 TRIGGER 裡面的程式來取代執行
AS 
   SET NOCOUNT ON   -- 不要顯示 '(影響 ? 個資料列)' 訊息

   -- 更新已存在於【員工T2】中的資料
   UPDATE 員工T2
   SET 員工T2.姓名 = inserted.姓名, 
          員工T2.薪資= inserted.薪資
   FROM 員工T2 JOIN inserted 
              ON 員工T2.員工編號 = inserted.員工編號
   PRINT '更改已存在的資料 ' + CAST(@@ROWCOUNT AS VARCHAR) + ' 筆'

   -- 插入不存在於【員工T2】中的新資料 
   INSERT 員工T2
   SELECT *
   FROM inserted
   WHERE  inserted.員工編號 NOT IN  --因為有很多筆所以用in,而不是用 <> (不等於)
                   ( SELECT 員工編號 FROM 員工T2  )
   PRINT '加入新的資料 ' + CAST(@@ROWCOUNT AS VARCHAR) + ' 筆'
GO
========================================================================

CREATE TRIGGER 處理新增員工
ON 員工列表
INSTEAD OF INSERT
AS
	SET NOCOUNT ON
    INSERT  員工T1 (姓名, 職稱)
    SELECT LEFT( 員工名稱, CHARINDEX(' ', 員工名稱) -1 ),    -- 抓空一格前面的文字,填入姓名裡面
           RIGHT( 員工名稱, LEN( 員工名稱) - CHARINDEX(' ', 員工名稱) )  -- LEN 抓總長度 , CHARINDEX 抓空格 , 然後再相減
    FROM inserted
GO

INSERT 員工列表 (員工編號, 員工名稱)
VALUES (9999,  '陳小雄 主任')

GO 
=========================================================================
*****
CREATE TRIGGER 處理新增訂單
ON 檢視訂單
INSTEAD OF INSERT
AS
SET NOCOUNT ON

-- 必要時新增客戶資料, 
INSERT 客戶T6 (客戶名稱)
SELECT 客戶名稱
FROM inserted
WHERE  inserted.客戶編號 NOT IN ( SELECT 客戶編號 FROM 客戶T6  )

-- 新增訂單資料
IF @@ROWCOUNT = 0   -- 如果沒有新增客戶 <--本來已經有資料在裡面
    INSERT 訂單T6 (日期, 客戶編號, 數量, 是否付款)
    SELECT 日期, 客戶編號, 數量, 是否付款
    FROM inserted
ELSE                                   -- 否則以新的客戶編號來更新訂單
    INSERT 訂單T6 (日期, 客戶編號, 數量, 是否付款)
    SELECT 日期, 客戶T6.客戶編號, 數量, 是否付款
    FROM inserted JOIN 客戶T6 ON inserted.客戶名稱 =客戶T6.客戶名稱
GO

INSERT 檢視訂單 (客戶編號, 客戶名稱, 訂單編號, 日期, 數量, 是否付款)
VALUES(9999, '洋洋量販店', 9999, '2008/12/30', 130, 0)
INSERT 檢視訂單 (客戶編號, 客戶名稱, 訂單編號, 日期, 數量, 是否付款)
VALUES(3, 'XXXXX', 9999, '2008/12/30', 130, 0)
GO
SELECT * FROM 訂單T6

GO 

===============================================================================

